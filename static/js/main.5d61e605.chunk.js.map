{"version":3,"sources":["Components/ProductList/ProductList.js","Components/NewProd/NewProd.js","Components/ViewProd/ViewProd.js","Components/EditProd/EditProd.js","Components/LowWidthList/LowWidthList.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["ProductList","products","this","props","className","map","product","index","key","name","ean","type","weight","color","id","checked","active","onChange","e","setProductActive","target","for","to","pathname","state","prodIndex","onClick","deleteProduct","React","Component","NewProd","window","scrollTo","redirect","onSubmit","handleFormSubmit","placeholder","value","newName","handleInputChange","newEan","newType","newWeight","newColor","ViewProd","location","String","EditProd","handleEditFormSubmit","editName","editEan","editType","editWeight","editColor","LowWidthList","App","canBeSubmitted","preventDefault","alert","push","setState","splice","delIndex","filter","p","length","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5d61e605.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ProductList.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ProductList extends React.Component {\r\n    render() { \r\n        const products = this.props.products;\r\n        return (\r\n            <div className=\"productList\">\r\n                <table className=\"productTable\">\r\n                    <tr>\r\n                        <th className=\"text-left\">Name</th>\r\n                        <th className=\"text-right\">EAN Code</th>\r\n                        <th className=\"text-right\">Type</th>\r\n                        <th className=\"text-right\">Weight</th>\r\n                        <th className=\"text-right\">Color</th>\r\n                        <th className=\"text-center\">Active</th>\r\n                    </tr>\r\n                    {products.map((product, index) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td className=\"text-left\">{product.name}</td>\r\n                                <td className=\"text-right\">{product.ean}</td>\r\n                                <td className=\"text-right\">{product.type}</td>\r\n                                <td className=\"text-right\">{product.weight}</td>\r\n                                <td className=\"text-right\">{product.color}</td>\r\n                                <td className=\"text-center\">\r\n                                <input type=\"checkbox\" id={index} className=\"checkmark\" checked={product.active} onChange={(e) => this.props.setProductActive(product, e.target.checked)} />\r\n                                <label for={index} /></td>\r\n                                <td className=\"text-center\"><Link to={{ pathname: \"/view\", state: { prodIndex: index }}} ><button className=\"view-button\">View</button></Link></td>\r\n                                <td className=\"text-center\"><Link to={{ pathname: \"/edit\", state: { prodIndex: index }}} ><button className=\"edit-button\">Edit</button></Link></td>\r\n                                <td className=\"text-center\"><Link to={{ pathname: \"/talech-task\"}} ><button className=\"delete-button\" onClick={() => this.props.deleteProduct(index)}>Delete</button></Link></td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </table>\r\n                <div className=\"create-box\">\r\n                 <Link to={{ pathname: \"/create\"}} ><button className=\"create-button\">Create</button></Link>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProductList;","import React from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport \"../NewProd/NewProd.css\"\r\n\r\nclass NewProd extends React.Component {\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    /*componentWillUnmount() {\r\n        localStorage.setItem(\"products\", JSON.stringify(this.props.products));\r\n      }*/\r\n    render() {\r\n        const redirect = this.props.redirect;\r\n        if (redirect) return <Redirect to=\"/\" />\r\n        return (\r\n            <div className=\"createProd\">\r\n            <form className=\"createForm\" onSubmit={this.props.handleFormSubmit}>\r\n            <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"Product Name:\" value={this.props.newName} onChange={this.props.handleInputChange} />\r\n            <input id=\"ean\" type=\"text\" name=\"ean\" placeholder=\"EAN Code:\" value={this.props.newEan} onChange={this.props.handleInputChange} />\r\n            <input id=\"type\" type=\"text\" name=\"type\" placeholder=\"Product Type:\" value={this.props.newType} onChange={this.props.handleInputChange} />\r\n            <input id=\"weight\" type=\"text\" name=\"weight\" placeholder=\"Product Weight:\" value={this.props.newWeight} onChange={this.props.handleInputChange} />\r\n            <input id=\"color\" type=\"text\" name=\"color\" placeholder=\"Product Color:\" value={this.props.newColor} onChange={this.props.handleInputChange} />\r\n            <div className=\"createButtons\">\r\n            <button type=\"submit\" value=\"Submit\" className=\"new-button\">Add</button>\r\n            <Link to={{ pathname: \"/talech-task\"}} ><button className=\"close-button\">Close</button></Link>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default NewProd;","import React from \"react\";\r\nimport \"./ViewProd.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ViewProd extends React.Component {\r\n    render() { \r\n        const products = this.props.products;\r\n        const index = this.props.location.state.prodIndex;\r\n        return (\r\n            <div className=\"viewProd\">\r\n                <ul>\r\n                    <li><span className=\"bold\">Name:</span> {products[index].name}</li>\r\n                    <li><span className=\"bold\">EAN Code:</span> {products[index].ean}</li>\r\n                    <li><span className=\"bold\">Type:</span> {products[index].type}</li>\r\n                    <li><span className=\"bold\">Weight:</span> {products[index].weight}</li>\r\n                    <li><span className=\"bold\">Color:</span> {products[index].color}</li>\r\n                    <li className=\"capitalize\"><span className=\"bold\">Active:</span> {String(products[index].active)}</li>\r\n                    <div className=\"viewbutt\">\r\n                    <td><Link to={{ pathname: \"/talech-task\"}} ><button className=\"viewclose-button\">Close</button></Link></td>\r\n                    </div>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewProd;","import React from \"react\";\r\nimport \"./EditProd.css\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\n\r\nclass EditProd extends React.Component {\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        /*localStorage.getItem(\"products\");*/\r\n    }\r\n    /*componentWillUnmount() {\r\n        localStorage.setItem(\"products\", JSON.stringify(this.props.products));\r\n      }*/\r\n    render() { \r\n        const products = this.props.products;\r\n        const index = this.props.location.state.prodIndex;\r\n        let redirect = this.props.redirect;\r\n        if (redirect) return <Redirect to=\"/\" />;\r\n        return (\r\n            <div>\r\n            <form className=\"editForm\" onSubmit={(e) => this.props.handleEditFormSubmit(index, e)} >\r\n            <input id=\"editname\" type=\"text\" name=\"name\" placeholder={`Name: ${products[index].name}`} value={this.props.editName} onChange={this.props.handleInputChange} />\r\n            <input id=\"editean\" type=\"text\" name=\"ean\" placeholder={`EAN Code: ${products[index].ean}`} value={this.props.editEan} onChange={this.props.handleInputChange} />\r\n            <input id=\"edittype\" type=\"text\" name=\"type\" placeholder={`Type: ${products[index].type}`} value={this.props.editType} onChange={this.props.handleInputChange} />\r\n            <input id=\"editweight\" type=\"text\" name=\"weight\" placeholder={`Weight: ${products[index].weight}`} value={this.props.editWeight} onChange={this.props.handleInputChange} />\r\n            <input id=\"editcolor\" type=\"text\" name=\"color\" placeholder={`Color: ${products[index].color}`} value={this.props.editColor} onChange={this.props.handleInputChange} />\r\n            <div className=\"editButtons\">\r\n            <button className=\"edit-save-button\" type=\"submit\" value=\"Submit\">Save</button>\r\n            <Link to={{ pathname: \"/talech-task\"}} ><button className=\"close-edit-button\">Close</button></Link>\r\n            </div>\r\n        </form>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default EditProd;","import React from \"react\";\r\nimport \"./LowWidthList.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass LowWidthList extends React.Component {\r\n    render() { \r\n        const products = this.props.products;\r\n        return (\r\n            <div className=\"lowWidthList\">\r\n            {products.map((product, index) => {\r\n                return (\r\n                    <ul className=\"low-list\" key={index}>\r\n                    <li><span className=\"bold\">Name:</span> {product.name}</li>\r\n                    <li><span className=\"bold\">EAN Code:</span> {product.ean}</li>\r\n                    <li><span className=\"bold\">Type:</span> {product.type}</li>\r\n                    <li><span className=\"bold\">Weight:</span> {product.weight}</li>\r\n                    <li><span className=\"bold\">Color:</span> {product.color}</li>\r\n                    <li className=\"capitalize\"><span className=\"bold\">Active:</span> {String(product.active)}</li>\r\n                    <div className=\"low-buttons\">\r\n                    <li><Link to={{ pathname: \"/create\"}} ><button className=\"create-button\" onClick={() => window.scrollTo(0, 0)}>Create</button></Link></li>\r\n                    <li className=\"text-center\"><Link to={{ pathname: \"/edit\", state: { prodIndex: index }}} ><button className=\"edit-button\">Edit</button></Link></li>\r\n                    <li className=\"text-center\"><Link to={{ pathname: \"/talech-task\"}} ><button className=\"delete-button\" onClick={() => this.props.deleteProduct(index)}>Delete</button></Link></li> \r\n                    </div>      \r\n                </ul>\r\n                )\r\n            })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LowWidthList;","import React from 'react';\nimport './App.css';\nimport ProductList from \"../ProductList/ProductList\";\nimport NewProd from \"../NewProd/NewProd\";\nimport ViewProd from \"../ViewProd/ViewProd\";\nimport EditProd from \"../EditProd/EditProd\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport LowWidthList from '../LowWidthList/LowWidthList';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n            redirect: false,\n            name: \"\", \n            ean: \"\", \n            type: \"\", \n            weight: \"\", \n            color: \"\", \n            active: false,\n            products: [{name: \"Cabbage\", ean: \"00000000\", type: \"Vegetable\", weight: \"2kg\", color: \"Green\", active: false}, \n            {name: \"Banana\", ean: \"111111111\", type: \"Fruit\", weight: \"0.3kg\", color: \"Yellow\", active: false}, \n            {name: \"Chocolate\", ean: \"22222222222\", type: \"Candy\", weight: \"0.2kg\", color: \"Brown\", active: false}, \n            {name: \"Orange\", ean: \"3333333333\", type: \"Fruit\", weight: \"0.5kg\", color: \"Orange\", active: false}, \n            {name: \"Cucumber\", ean: \"4444444444\", type: \"Vegetable\", weight: \"1kg\", color: \"Green\", active: false}, ]\n    };\n};\n/*componentDidMount() {\n  let localData = JSON.parse(localStorage.getItem(\"products\"));\n  console.log(localData);\n  this.setState({products: localData})\n}\nsetToLocalStorage() {\n  localStorage.setItem(\"products\", JSON.stringify(this.state.products));\n}*/\nhandleFormSubmit = (e) => {\n  if (!this.canBeSubmitted()) {\n    e.preventDefault();\n    return alert(\"Please fill all empty text spaces\");\n  } \n  e.preventDefault();\n  let products = [...this.state.products];\n  products.push({\n      name: this.state.name,\n      ean: this.state.ean,\n      type: this.state.type,\n      weight: this.state.weight,\n      color: this.state.color,\n      active: false,\n  });\n  this.setState({ redirect: true, products, \n    name: \"\", ean: \"\", type: \"\", weight: \"\", color: \"\", active: false},\n    () => {this.setState({redirect: false})}\n  );\n}\nhandleEditFormSubmit = (index, e) => {\n  if (!this.canBeSubmitted()) {\n    e.preventDefault();\n    return alert(\"Please fill all empty text spaces\");\n  } \n  e.preventDefault();\n  let products = [...this.state.products];\n  products.splice(index, 1, {name: this.state.name,\n    ean: this.state.ean,\n    type: this.state.type,\n    weight: this.state.weight,\n    color: this.state.color,\n    active: false})\n  this.setState({ redirect: true, products, name: \"\", ean: \"\", type: \"\", weight: \"\", color: \"\", active: false}, \n  () => this.setState({redirect: false})\n  );\n  }\ncanBeSubmitted() {\n  const {name, ean, type, weight, color} = this.state;\n  return (name.length > 0 && \n    ean.length > 0 && \n    type.length > 0 && \n    weight.length > 0 && \n    color.length > 0\n  )\n}\nhandleInputChange = (e) => {\n    this.setState({...this.state,\n    [e.target.name]: e.target.value})\n  };\ndeleteProduct = (delIndex) => {\n  let products = [...this.state.products].filter((product, index) => index !== delIndex);\n  this.setState({ products }/*,\n    () => this.setToLocalStorage()*/);\n};\nsetProductActive = (product, active) => {\n  this.setState((state) => ({\n    products: state.products.map(p => p.name === product.name ? { ...p, active } : p)\n  }));\n}\n\nrender() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <ProductList products={this.state.products} \n      deleteProduct={this.deleteProduct}\n      setProductActive={this.setProductActive} />\n      <Route path=\"/create\" render={(props) => <NewProd {...props} \n      products = {this.state.products}\n      redirect = {this.state.redirect}\n      handleFormSubmit={this.handleFormSubmit}\n      handleInputChange={this.handleInputChange}\n      newName={this.state.name}\n      newEan={this.state.ean}\n      newType={this.state.type}\n      newWeight={this.state.weight}\n      newColor={this.state.color} />} />\n      <Route path=\"/view\" render={(props) => <ViewProd {...props} products={this.state.products} />} />\n      <Route path=\"/edit\" render={(props) => <EditProd {...props} products={this.state.products} \n      handleInputChange={this.handleInputChange}\n      handleEditFormSubmit={this.handleEditFormSubmit}\n      editName={this.state.name}\n      editEan={this.state.ean}\n      editType={this.state.type}\n      editWeight={this.state.weight}\n      editColor={this.state.color}\n      redirect={this.state.redirect} />} /> \n      <LowWidthList products={this.state.products}\n      deleteProduct={this.deleteProduct} />\n    </div>\n    </BrowserRouter>\n  );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}